<html>
<head>
<title><%= title %></title>

<link rel="stylesheet" href="public/css/bootstrap.min.css">
<link rel="stylesheet" href="public/css/bootstrap-theme.min.css">
<link rel="stylesheet" href="public/css/base.css">
<link rel="stylesheet" href="public/css/index.css">
<link rel="stylesheet" href="public/css/jquery-ui.css">

<script src="public/js/jquery.js"></script>
<script src="public/js/bootstrap.min.js"></script>
<script src="public/js/createChecklist.js"></script>
<script src="public/js/jquery-ui.js"></script>
<style type="text/css">

.container{
	width: 100%;
	padding: 0px;
}
.bottom{
	width: 100%;
	height: 100%;
	margin-top: 3%;
}
.search_select{
	text-transform: uppercase;
	height: 100%;
	cursor: pointer;
	font-size: 13px;
	letter-spacing: 1px;	
}
.plusContainer{
	margin-top: 3%;
}
.plus,.refresh{
	margin: 0 auto;
	color: black;
	background-color: rgb(174, 174, 174);
	width: 150px;
	height: 150px;
	text-align: center;
	border-radius: 50%;
	position: relative;
	cursor: pointer;
	-webkit-transition: background-color 250ms linear;
  -moz-transition: background-color 250ms linear;
  -o-transition: background-color 250ms linear;
  -ms-transition: background-color 250ms linear;
  transition: background-color 250ms linear;
}

.refresh{
	margin-top: 10%;
}
.plus:hover,.refresh:hover{
	background-color: black;
	color: rgb(174, 174, 174);
	-webkit-transition: background-color 250ms linear;
  -moz-transition: background-color 250ms linear;
  -o-transition: background-color 250ms linear;
  -ms-transition: background-color 250ms linear;
  transition: background-color 250ms linear;
}
.plus p, .refresh p{
	font-size: 200px;
  width: 100%;
	height: 100%;
	position: absolute;
	top: 40px;
}
</style>
<script type="text/javascript">
	$(document).ready(function(){
		//Check if Safari
		var isSafari = Object.prototype.toString.call(window.HTMLElement).indexOf('Constructor') > 0;
		if (isSafari){
			$(".refresh p").html("REFRESH");
			$(".refresh p").css({"font-size":"25px","font-weight":"bold"});
		}

		//POST request function
		function post(path, params, method) {
	    method = "post"; // Set method to post by default if not specified.

	    var form = document.createElement("form");
	    form.setAttribute("method", method);
	    form.setAttribute("action", path);

	    for(var key in params) {
        if(params.hasOwnProperty(key)) {
          var hiddenField = document.createElement("input");
          hiddenField.setAttribute("type", "hidden");
          hiddenField.setAttribute("name", "checklists["+key+"]");
          hiddenField.setAttribute("value", JSON.stringify(params[key]));

          form.appendChild(hiddenField);
        }
	    }

	    document.body.appendChild(form);
	    form.submit();
		};

		//GET request function
		function get(path, method, key, value) {
	    method = "get";

	    var form = document.createElement("form");
	    form.setAttribute("method", method);
	    form.setAttribute("action", path);

      var hiddenField = document.createElement("input");
      hiddenField.setAttribute("type", "hidden");
      hiddenField.setAttribute("name", key);
      hiddenField.setAttribute("value", value);

      form.appendChild(hiddenField);

	    document.body.appendChild(form);
	    form.submit();
		};

		//variables
		var data = <%- content %>;
		var checklists = data.checklists;
		var trueAssets = data.trueAssets;
		var trueRegions = data.trueRegions;
		var trueChecklists = []
		var checklistsCopy = [];

		console.log(checklists);
		
		var container = $('.container');
		var plusContainer = $('.plusContainer');

		//creating checklists
		checklists.forEach(function(checklist, index){
			var checklistDiv = $('<div/>')
													.addClass('checklist')
													.attr('id','checklist'+index)
													.insertBefore(plusContainer);

			createChecklist(checklist, index, checklistDiv,'asset');
			createChecklist(checklist, index, checklistDiv,'region');
			trueChecklists.push("checklist_"+index);
		});

		//populating search text box on top
		var formKey = "alll";

		function populateSearch(value){
			switch(value){
				case "asset":
					console.log("asset");
					console.log(trueAssets);
					$(".search").autocomplete({
						source: trueAssets
			    });
			    formKey = "asset";
			    break;

			  case "region":
			  	$(".search").autocomplete({
						source: trueRegions
			    });
			    formKey = "region";
			    break;

			  case "checklist":
			  	$(".search").autocomplete({
						source: trueChecklists
			    });
			    formKey = "checklist";
			    break;

			  default:
			  	formKey = "alll";
			  	break;
			}
		}

		populateSearch($(".search_select").val());

		$(".search_select").change(function(){
			var value = $(this).val();
			populateSearch(value);
		});
		
		//Submitting the checklist
		$(".submit").click(function(e){
			e.preventDefault();
			var getValue = $(".search").val();
			console.log(formKey);
			console.log(getValue);
			get('/checklist',"get",formKey,getValue);

		});

		//Logging out the user
		$(".logout").click(function(e){
			e.preventDefault();
			get('/logout',"get",'','');

		});

		//Adding checklist on add button
		var clicks = checklists.length - 1;
		$(".plus").click(function(){
			clicks++;
			var checklist = {
				"assets": [],
				"regions": []
			}

			var checklistDiv = $('<div/>')
												.addClass('checklist')
												.attr('id','checklist'+clicks)
												.insertBefore(plusContainer);

			createChecklist(checklist, clicks,checklistDiv,'asset');
			createChecklist(checklist, clicks,checklistDiv,'region');
			checklists.push(checklist);

			autocomplete();
			update();
			cssFloat();
		});


		//If 1 checklist -> center, else float: left
		function cssFloat(){
			if (checklists.length <= 1){
				$(".checklist").css({
					"margin-left":"auto",
					"margin-right":"auto"
				});
			}
			else {
				$(".checklist").css({
					"float":"left",
					"margin-left":"5%"
				});
			}

		};
		cssFloat();

		//Add items to checklist
		function addItem(ul, checklist, item, string){

			var li = $('<li/>')
							.addClass('view')
							.attr('id',item)
							.attr('data-checklist', checklist)
							.attr('data-type',string)
							.appendTo(ul);

			var div = $('<div/>')
								.addClass('view')
								.attr('data-type',string)
								.appendTo(li);

			var input = $('<input/>')
									.addClass('toggle')
									.attr('type','checkbox')
									.attr('data-asset',item)
									.attr('data-type',string)
									.appendTo(div);

			var label = $('<label/>')
									.text(item)
									.attr('data-type',string)
									.appendTo(div);

			$(".checklist"+checklist+" #new-todo").val("");
		};

		//Autocompleting assets and regions fields
		function autocomplete(){
			$(".asset").autocomplete({
				source: data.assets,
				select: function (a, b) {
					var checklistNo = parseInt(this.dataset.checklist);
		      if (a.keyCode === 13){
		      	addItem($(".asset_checklist"+checklistNo),checklistNo,b.item.value,'asset');
		      	update();
		      	checklists[checklistNo].assets.push(b.item.value);

		  		}
		  	}
		  });

		  $(".region").autocomplete({
				source: data.regions,
				select: function (a, b) {
					var checklistNo = parseInt(this.dataset.checklist);
		      if (a.keyCode === 13){
		      	addItem($(".region_checklist"+checklistNo),checklistNo,b.item.value, 'region');
		      	update();
		      	checklists[checklistNo].regions.push(b.item.value);
		  		}
		  	}
		  });
  	};

  	autocomplete();

  	//checkboxes
		function check(checklistNo,dataType){
			var checklistSelector = ".checklist"+checklistNo+"_"+dataType;
			
			$(checklistSelector+ " .toggle").each(function(){
				if($(this).is(":checked")) {
					var parent = $(this).parent().parent();
					parent.removeClass("view");
					parent.addClass("completed");
				}
				else {
					var parent = $(this).parent().parent();
					parent.removeClass("completed");
					parent.addClass("view");
				}
			});
		};

		//checkboxes
		function update(){
			$(".toggle-all").change(function(){
				
				var checklistNo = parseInt($(this).attr('data-checklist'));
				var dataType = $(this).attr('data-type')
				var checklistSelector = ".checklist"+checklistNo+"_"+dataType;
				
				if(this.checked) {
					
					$(checklistSelector+ " .toggle").each(function(){
						this.checked = true;
						check(checklistNo,dataType);
					});

					checklistsCopy[checklistNo] = JSON.parse(JSON.stringify(checklists[checklistNo]));
					checklists[checklistNo].assets=[];
					checklists[checklistNo].regions=[];
					console.log(checklists, checklistsCopy);
					data.assets = data.assets.concat(checklistsCopy[checklistNo].assets);
				}
				else {

					$(checklistSelector+ " .toggle").each(function(){
						this.checked = false;
						check(checklistNo,dataType);
					});

					data.assets = data.assets.filter(function(el){
						return checklistsCopy[checklistNo].assets.indexOf(el) < 0;
					});

					checklists[checklistNo] = JSON.parse(JSON.stringify(checklistsCopy[checklistNo]));
					console.log(checklists, checklistsCopy);
				}

				$(".asset").autocomplete({
					source: data.assets
				});

			});

			//checkboxes
			$("#todo-list .toggle").change(function(){
				var parent = $(this).parent().parent();
				var checklistNo = parseInt(parent.attr('data-checklist'));
				var dataType = $(this).attr('data-type')
				var checklistSelector = ".checklist"+checklistNo+"_"+dataType;
				
				if($(this).is(":checked")) {

					var checkAll = $(checklistSelector +" .toggle:checked").length == $(checklistSelector+" .toggle").length;
					var toggleAll = $(checklistSelector +' .toggle-all[data-checklist="'+checklistNo+'"]');
					if (checkAll)
						toggleAll[0].checked = true;
					
					parent.removeClass("view");
					parent.addClass("completed");

					if (dataType === 'asset'){
						checklists[checklistNo].assets = checklists[checklistNo].assets.filter(function(elem){
							return elem !== parent.attr('id');
						});
						data.assets.push(parent.attr('id'));
					}
					else if (dataType === 'region')
						checklists[checklistNo].regions = checklists[checklistNo].regions.filter(function(elem){
							return elem !== parent.attr('id');
						});

					console.log(checklists);
				}
				else {
					
					var toggleAll = $(checklistSelector+ ' .toggle-all[data-checklist="'+checklistNo+'"]');
					toggleAll[0].checked = false;
					
					parent.removeClass("completed");
					parent.addClass("view");
					
					if (dataType === 'asset'){
						checklists[checklistNo].assets.push(parent.attr('id'));
						data.assets = data.assets.filter(function(el){
							return el!== parent.attr('id');
						});
					}
					else if (dataType === 'region')
						checklists[checklistNo].regions.push(parent.attr('id'));

					console.log(checklists);
				}
				$(".asset").autocomplete({
					source: data.assets
				});
			});
		};
		update();

		$(".refresh").click(function(){
			post('/checklist',checklists);
		});
		
	});
</script>
</head>
<body>
	<div class="container">
		<!--div class="row">
		  <div class="col-lg-10">
		  <form class="form-inline">
		    <div class="form-group" style="width:100%;">
		      <select class="form-control search_select" style="width:15%;">
		      	<option value="alll">Checklists</option>
					  <option value="checklist">Checklist</option>
					  <option value="region">Region</option>
					  <option value="asset">Asset</option>
					</select>
		      <input type="text" class="form-control search" aria-label="..." style="width:84%;">
		    </div>
		    </form>
		  </div>
		  <button type="button" class="btn btn-default submit">Submit</button>
		  <form action="logout" method = "get">
			    <input type="submit" class="btn btn-default logout" value="Logout">
			</form>


	  </div-->
	  <ul id="gn-menu" class="gn-menu-main">
			<li class="left">
	      <select class="form-control search_select">
	      	<option value="alll">Checklists</option>
				  <option value="checklist">Checklist</option>
				  <option value="region">Region</option>
				  <option value="asset">Asset</option>
				</select>
			</li>
			<li class="searchInput"><input placeholder="Search" class="gn-search search" type="search"></li>
			<li class="right"><a class="logout right" href="#">Logout</a></li>
			<li class="right"><a class="submit" href="#">Search</a></li>
		</ul>
		<div class="bottom">
		  <div style="clear:both;" class="empty"></div>

		  <div class="plusContainer checklist">
		  	<div class="plus"><p>+</p></div>
		  	<div class="refresh"><p>&#10226;</p></div>
		  </div>
	  </div>
  </div>
  
</body>
</html>